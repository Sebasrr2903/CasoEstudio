@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> SignInManager;
@using Domain.Articulos;
@model List<ArticuloDTO>

@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;

@{
    ViewData["Title"] = "Articulos";
}
  @if (SignInManager.IsSignedIn(User))
 {
      <a class="btn btn-success" asp-controller="Home" asp-action="Create">Crear Articulo</a>
 }


@foreach (var Articulo in Model)
{
    <hr />
    <div class="card">
        <div class="card-header">
            @Articulo.Header
            @if (SignInManager.IsSignedIn(User))
            {
                <button class="btn btn-light ml-2" id="likeButton">
                    <i class="fas fa-thumbs-up"></i>
                    <span id="likeCount">0</span>
                </button>
                <button class="btn btn-light ml-2" id="dislikeButton">
                    <i class="fas fa-thumbs-down"></i>
                    <span id="dislikeCount">0</span>
                </button>
            }
        </div>
        <div class="card-body">

            <h6> @Articulo.Body</h6>

        </div>
        <div class="card-header">
            @if (SignInManager.IsSignedIn(User))
            {
                <form class="comentarioForm" >
                    <input type="hidden" id="usernameInput" value="@HttpContextAccessor.HttpContext.Session.GetString("userName")">
                    <textarea class="mb-1 mt-1" style="width: 100%;" id="comentarioInput" rows="2" MaxLength="100" placeholder ="Escribe tu comentario"></textarea>
                    <button id="submitButton" class="btn btn-success mb-1" type="submit" data-articulo-id="@Articulo.Id">Comentar</button>
                </form>
            }
            Comentarios            
        </div>
        
            @if (Articulo.Comentario != null && Articulo.Comentario.Any())
            {
                @foreach (var comentario in Articulo.Comentario)
            {
                <div class="card-body">
                    <div class="blockquote mb-0">
                        <h4 class="font-weight-bold">@comentario.Fecha.ToShortDateString()</h4>
                    <p class="font-weight-bold">@comentario.Username dijo:</p>
                        <footer class="blockquote-footer">@comentario.Comment</footer>
                    </div>
                    <hr />
                </div>
                }
            }
            else
            {
            <div class="card-body">
                <p>No hay comentarios.</p>
            </div>
            }
        


    </div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        async function enviarComentario(comentarioData) {
            try {
                const response = await fetch(`https://localhost:44302/api/comentarios`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    mode: 'cors',
                    body: JSON.stringify(comentarioData)
                });

                if (!response.ok) {
                    throw new Error('Error al enviar el comentario');
                }

                const idComentario = await response.text();
                return parseInt(idComentario);
            } catch (error) {
                console.error('Error al enviar el comentario:', error);
                throw error;
            }
        }

        async function asociarComentarioAlArticulo(idArticulo, idComentario) {
            try {
                const response = await fetch(`https://localhost:44302/api/articulos/${idArticulo}/addcomment`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    mode: 'cors',
                    body: JSON.stringify({ idComment: idComentario })
                });

                if (response.status !== 201) {
                    throw new Error('Error al asociar el comentario al artículo');
                }

                return {};
            } catch (error) {
                console.error('Error al asociar el comentario al artículo:', error);
                throw error;
            }
        }

        $('.comentarioForm').submit(async function (event) {
            event.preventDefault();

            const idArticulo = $(this).find('#submitButton').data('articulo-id');
            const comentario = $(this).find('#comentarioInput').val();
            const usuario = $(this).find('#usernameInput').val();

            try {
                const idComentario = await enviarComentario({ fecha: new Date().toISOString(), comment: comentario, username: usuario });
                console.log('Comentario creado con éxito, ID:', idComentario);

                const resultado = await asociarComentarioAlArticulo(idArticulo, idComentario);
                console.log('Comentario asociado con éxito al artículo');

                window.location.reload();

            } catch (error) {
                console.error('Error:', error);
            }
        });


    });
</script>
