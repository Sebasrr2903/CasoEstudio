// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240422011132_tablaLikesCorrecto")]
    partial class tablaLikesCorrecto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArticuloComentario", b =>
                {
                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("ComentarioIdC")
                        .HasColumnType("int");

                    b.HasKey("ArticuloId", "ComentarioIdC");

                    b.HasIndex("ComentarioIdC");

                    b.ToTable("ArticuloComentario");
                });

            modelBuilder.Entity("ArticuloLike", b =>
                {
                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("LikeIdL")
                        .HasColumnType("int");

                    b.HasKey("ArticuloId", "LikeIdL");

                    b.HasIndex("LikeIdL");

                    b.ToTable("ArticuloLike");
                });

            modelBuilder.Entity("Domain.Articulos.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasAnnotation("Relational:JsonPropertyName", "body");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasAnnotation("Relational:JsonPropertyName", "header");

                    b.HasKey("Id");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("Domain.Comentarios.Comentario", b =>
                {
                    b.Property<int>("IdC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "idC");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdC"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:JsonPropertyName", "comment");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "fecha");

                    b.HasKey("IdC");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Domain.Likes.Like", b =>
                {
                    b.Property<int>("IdL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "idL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdL"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasAnnotation("Relational:JsonPropertyName", "tipo");

                    b.HasKey("IdL");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("ArticuloComentario", b =>
                {
                    b.HasOne("Domain.Articulos.Articulo", null)
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Comentarios.Comentario", null)
                        .WithMany()
                        .HasForeignKey("ComentarioIdC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArticuloLike", b =>
                {
                    b.HasOne("Domain.Articulos.Articulo", null)
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Likes.Like", null)
                        .WithMany()
                        .HasForeignKey("LikeIdL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
